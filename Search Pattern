class Solution {
    ArrayList<Integer> search(String pat, String txt) 
    {
        // code here
        int lps [] = new int[pat.length()];
        ArrayList<Integer> ind = new ArrayList<>();
        kMP(pat,lps);
        int i = 0;
        int j = 0;
        while(i<txt.length())
        {
            if(txt.charAt(i)==pat.charAt(j))
            {
                i++;
                j++;
            }
            if(j==pat.length())
            {
                ind.add(i-j);
                j = lps[j-1];
            }
            if(i<txt.length() && (txt.charAt(i)!=pat.charAt(j)))
            {
                if(j!=0)
                {
                    j=lps[j-1];
                }
                else
                {
                    i++;
                }
            }
        }
        return ind;
    }
    public void kMP(String pat,int lps[])
    {
       
        int len = 0;
        int i = 1;
        while(i<pat.length())
        {
            if(pat.charAt(i)==pat.charAt(len))
            {
                len++;
                lps[i] = len;
                i++;
            }
            else
            {
                if(len!=0)
                {
                    len = lps[len-1];
                }
                else
                {
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }
}
